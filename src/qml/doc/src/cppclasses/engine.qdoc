/****************************************************************************
**
** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms
** and conditions contained in a signed written agreement between you
** and Nokia.
**
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/
/*!
\page qtqml-cppclasses-engine.html
\title Qt QML Module C++ Classes - QQmlEngine
\brief Description of QQmlEngine


The QML engine runs and executes QML
applications. The engine loads, instantiates, and executes the QML context as
specified in QML files, plugins, or applications.


    A QQmlEngine allows the configuration of global settings that
    apply to all of its QML component instances: for example, the
    QNetworkAccessManager to be used for network communications, and the
    file path to be used for persistent storage.

    QQmlComponent is used to load QML documents. Each
    QQmlComponent instance represents a single document. A component
    can be created from the URL or file path of a QML document, or the raw
    QML code of the document. Component instances are instatiated through
    the QQmlComponent::create() method, like this:

    \code
    QQmlEngine engine;
    QQmlComponent component(&engine, QUrl::fromLocalFile("MyRectangle.qml"));
    QObject *rectangleInstance = component.create();

    // ...
    delete rectangleInstance;
    \endcode

    QML documents can also be loaded using QQuickView.



*/
