/****************************************************************************
**
** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms
** and conditions contained in a signed written agreement between you
** and Nokia.
**
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
\page qtquick-main.html
\title Qt Quick Module
\brief The Qt Quick module implements the "standard library" for QML

\section1 Overview of the Qt Quick Module

The Qt Quick module is the standard library for the QML language (which is
defined and implemented by the \l{qtqml-main.html}{Qt QML module}).
The Qt Quick module provides a visual canvas, visual item types, an animation
framework, and types which make dynamic instantiation of objects more
convenient.  It also provides the QQuickView C++ class to enable displaying
a user-interface written in Qt Quick.

In summary, Qt Quick provides a library of visual types to allow building a
user-interface, and the C++ API to instantiate and interact with it.

\section1 Important Concepts in Qt Quick

Qt Quick provides everything needed to create a rich application with a fluid
and dynamic user interface.  It is based around behavior declaration rather
than imperative programming, and defines a visual canvas with its own
coordinate system and drawing implementation.  There are many ways to position
user-interface elements on the screen, and animation and transition effects are
a first-class concept in Qt Quick.

\list
\li \l{qtquick-visualcanvas-topic.html}{The Visual Canvas}
\li \l{qtquick-input-topic.html}{User Input}
\li \l{qtquick-positioning-topic.html}{Positioning}
\li \l{qtquick-statesanimations-topic.html}{States, Transitions And Animations}
\li \l{qtquick-modelviewsdata-topic.html}{Data - Models, Views and Data Storage}
\li \l{qtquick-effects-topic.html}{Particles And Graphical Effects}
\li \l{qtquick-convenience-topic.html}{Convenience Types}
\endlist

When using the QtQuick module, you will need to know how to write QML
applications using the QML language. In particular, you should have a grasp
of the \l{qtquick-quickstart-basics.html}{QML Basics} and
\l{qtquick-quickstart-essentials.html}{QML Essentials} from the
\l{qtquick-applicationdevelopers.html}{QML Application Developer Resources}.
To find out more about using the QML language, see the \l{Qt QML Module Documentation}.


\section1 Qt Quick Module Documentation

\list

    \li \l{qtquick-qmltypereference.html}{QML Types provided by the QtQuick Module}
        \list
        \li \l{qtquick-qmltypereference.html#importing-qtquick}{Importing QtQuick}
        \li \l{qtquick-qmltypereference.html#basic-types}{Basic Types}
        \li \l{qtquick-qmltypereference.html#object-types}{Object Types}
            \list
            \li \l{qtquick-qmltypereference.html#visual-types}{Visual Types}
            \li \l{qtquick-qmltypereference.html#user-input}{User Input}
            \li \l{qtquick-qmltypereference.html#positioning}{Positioning}
            \li \l{qtquick-qmltypereference.html#states-transitions-and-animations}{States, Transitions And Animations}
            \li \l{qtquick-qmltypereference.html#model-view-types-and-data-storage-and-access}{Model/View Types And Data Storage And Access}
            \li \l{qtquick-qmltypereference.html#graphical-effects}{Graphical Effects}
            \li \l{qtquick-qmltypereference.html#convenience-types}{Convenience Types}
            \li \l{qtquick-qmltypereference.html#canvas-similar-to-html5-canvas}{Canvas (similar to HTML5 Canvas)}
            \endlist
        \endlist

    \li \l{qtquick-cppextensionpoints.html}{C++ Extension Points}
        \list
        \li \l{qtquick-cppextensionpoints.html#user-defined-qquickitem-derived-types}{Creating User-Defined QQuickItem-Derived Types}
        \li \l{qtquick-cppextensionpoints.html#scene-graph-related-classes}{Scene Graph-Related Classes}
        \endlist

\endlist

\section1 Reference Documentation

More information about the Qt Quick module is contained within the class and
function documentation of the \l{qtquick-apireference.html}
{Qt Quick Module API Reference}.  The QML types provided by the Qt Quick module
are listed in the \l{qtquick-qmltypereference.html}
{Qt Quick Module QML Type Reference} page.

Application developers who are interested in writing applications using QML
should start by reading the \l{qtquick-applicationdevelopers.html}
{QML Application Developer Resources}.  The documentation for the
\l{qtqml-main.html}{Qt QML} module is also an indispensible resource for
application developers who are using Qt Quick, as it provides the definition
and implementation of the QML language (for which Qt Quick is the standard
library of types and functionality).

Quick Links:
\list
\li \l{qtquick-qmltypereference.html}{Qt Quick Module QML Type Reference}
\li \l{qtquick-module.html}{Qt Quick Module C++ API Reference}
\li \l{qtqml-main.html}{Qt QML Module Documentation}
\li \l{qtquick-applicationdevelopers.html}{QML Application Developer Resources}
\li \l{qtquick-releasenotes.html}{QtQuick Release Notes}
\endlist

*/
