/****************************************************************************
**
** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms
** and conditions contained in a signed written agreement between you
** and Nokia.
**
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
\title Qt Quick
\page qtquick-reference.html
\inqmlmodule QtQuick 2
\ingroup qt-gui-concepts
\ingroup overviews

\brief Qt Quick provides a declarative framework for building highly
dynamic applications.

For App Developers and Designers, who want to deliver apps with amazing user
experience, Qt provides the QML language, the Qt Quick types, and tools in Qt
Creator that make it faster than ever to transform your brilliant idea into a
winning App across mobile, embedded, and desktop platforms.

\target qtquick-overviews
\section1 QML - the Declarative Language

    QML is a declarative language for creating flexible and reusable types.
    The QML runtime powers QML based applications. The runtime includes a QML
    engine, JavaScript engine, and mechanism to bind to C++ types.

    \list
    \li \l{QML - the Declarative Language}{QML} - the declarative language
    \endlist

\section1 Qt Quick User Interfaces

Qt Quick features QML visual types, user input system, animation system, and data visualization through models and delegates.

    \list
    \li \l{UI Creation with Qt Quick}
    \endlist

\section1 QML Scene Graph

Qt Quick features a high-performance rendering scene graph based on OpenGL.
The scene graph offers a C++ API which allows developers to create their own unique
and stunning graphical elements.

    \list
    \li \l{QML Scene Graph}
    \endlist

\section1 QML Engine
There is a QML engine which runs QML applications. It includes C++ classes
that loads and initializes QML code and a JavaScript engine for running
expressions.
    \list
    \li \l{The QML Engine}
    \li \l{Qt Declarative UI Runtime}{Declarative Runtime}
    \endlist

\section1 SQL Local Storage

The SQL Local Storage provides a JavaScript interface to an SQLite database.
To use, import the \c QtQuick.LocalStorage module into a namespace with the
\c as keyword.

\code
import QtQuick.LocalStorage 2.0 as Sql
\endcode

The SQL Local Storage page has more information about the interface.
\list
    \li \l{Local Storage}{SQL Local Storage}
\endlist

*/

