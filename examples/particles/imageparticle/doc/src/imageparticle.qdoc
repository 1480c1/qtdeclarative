/****************************************************************************
**
** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms
** and conditions contained in a signed written agreement between you
** and Nokia.
**
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \title QtQuick.Particles Examples - Affectors
    \example particles/imageparticle
    \brief This is a collection of examples using Affectors in the QML particle system.
    \image qml-imageparticle-example.png

    This is a collection of small QML examples relating to using Affectors in the particle system.
    Each example is a small QML file emphasizing a particular element or feature.

    All at once shows off several of the features of ImageParticle at the same time.
    \snippet examples/particles/imageparticle/content/allatonce.qml 0

    Colored shows a simple ImageParticle with some color variation.
    \snippet examples/particles/imageparticle/content/colored.qml 0

    Color Table sets the color over life on the particles to provide a fixed rainbow effect.
    \snippet examples/particles/imageparticle/content/colortable.qml 0

    Deformation spins and squishes a starfish particle.
    \snippet examples/particles/imageparticle/content/colortable.qml spin
    \snippet examples/particles/imageparticle/content/colortable.qml deform

    Rotation demonstrates the autoRotate property, so that particles rotate in the direction that they travel.

    Sharing demonstrates what happens when multiple ImageParticles try to render the same particle.
    The following ImageParticle renders the particles inside the ListView:
    \snippet examples/particles/imageparticle/content/sharing.qml 0
    The following ImageParticle is placed inside the list highlight, and renders the particles above the other ImageParticle.
    \snippet examples/particles/imageparticle/content/sharing.qml 1
    Note that because it sets the color and alpha in this ImageParticle, it renders the particles in a different color.
    Since it doesn't specify anything about the rotation, it shares the rotation with the other ImageParticle so that the flowers are rotated the same way in both.
    Note that you can undo rotation in another ImageParticle, you just need to explicity set rotationVariation to 0.

    Sprites demonstrates using an image particle to render animated sprites instead of static images for each particle.
*/
