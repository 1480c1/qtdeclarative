/****************************************************************************
**
** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms
** and conditions contained in a signed written agreement between you
** and Nokia.
**
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
\page qtquick-elements.html
\title Qt Quick Elements
\brief a listing of standard elements in Qt Quick


\target elements

These are the functionally grouped lists of Qt Quick elements as part of
\l{Qt Quick}. You can also browse the module pages for \l{QtQuick 2} and \l{QtQuick.Particles 2}

Elements are declared with the their name and two curly braces. Elements may
be nested in elements, thereby creating a parent-child relationship between the
two elements.

\section1 Basic Elements
\list
\li \l {Item} - Basic item element inherited by visual elements
\endlist

\section1 Graphics
\list
\li \l {Rectangle} - A rectangle element
\li \l {Image} - For incorporating bitmaps into a scene
\li \l {BorderImage} - Allows the use of images as borders
\li \l {AnimatedImage} - For playing animations stored in a series of frames
\li \l {Gradient} - For defining a color gradient
\li \l {GradientStop} - Used to define a color within a \l {Gradient}
\li \l {SystemPalette} - Provides access to the Qt palettes
\li \l {Canvas} - Provides a 2D canvas element
\endlist

\section1 Text Handling
\list
\li \l {Text} - For inserting formatted text into a scene
\li \l {TextInput} - Captures user key input
\li \l {TextEdit} - Displays multiple lines of editable formatted text
\li \l {IntValidator} - Validates values as integers
\li \l {DoubleValidator} - Validates real values
\li \l {RegExpValidator} - Validator for string regular expressions
\li \l {FontLoader} - Loads fonts by name or URL
\endlist

\section1 Mouse and Interaction Area
\list
\li \l {MouseArea} - Sets up an area for mouse interaction
\li \l {Keys} - Provides components with attached properties to handle key input.
\li \l {FocusScope} - Element that mediate keyboard focus changes
\li \l {Flickable} - Provides a surface that can be "flicked"
\li \l {Flipable} - Provides a surface that produces "flipping" effects
\li \l {PinchArea} - Enables simple pinch gesture handling
\li \l {MultiPointTouchArea} - Enables handling of multiple touch points
\endlist

\section1 Positioners and Repeater
\list
\li \l {Column} - Arranges its children vertically
\li \l {Row} - Arranges its children horizontally
\li \l {Grid} - Positions its children in a grid
\li \l {Flow} - Positions its children with wrapping support
\li \l {Repeater} - Uses a model to create multiple components
\endlist

\section1 Transformations
\list
\li \l {Scale} - Assigns item scaling behaviors
\li \l {Rotation} - Assigns item rotation behaviors
\li \l {Translate} - Assigns item translation behaviors
\endlist

\section1 States
\list
\li \l {State} - Defines sets of configurations of objects and properties
\li \l {PropertyChanges} - Describes property changes within a state
\li \l {StateGroup} - Contains a set of states and state transitions
\li \l {StateChangeScript} - Allows script binding in a state
\li \l {ParentChange} - Re-parent an Item in a state change
\li \l {AnchorChanges} - Change the anchors of an item in a state
\endlist

\section1 Animation and Transitions
\list
\li \l {Transition} - Animates transitions during state changes
\li \l {SequentialAnimation} - Runs animations sequentially
\li \l {ParallelAnimation} - Runs animations in parallel
\li \l {Behavior} - Specifies a default animation for property changes
\li \l {PropertyAction} - Sets immediate property changes during animation
\li \l {PauseAnimation} - Introduces a pause in an animation
\li \l {SmoothedAnimation} - Allows a property to smoothly track a value
\li \l {SpringAnimation} - Allows a property to track a value in a spring-like motion
\li \l {ScriptAction} - Runs scripts during an animation
\endlist

Elements that animate properties based on data types
\list
\li \l {PropertyAnimation} - Animates property changes
\li \l {NumberAnimation} - Animates properties of type qreal
\li \l {Vector3dAnimation} - Animates properties of type QVector3d
\li \l {ColorAnimation} - Animates color changes
\li \l {RotationAnimation} - Animates rotations
\li \l {ParentAnimation} - Animates parent changes
\li \l {AnchorAnimation} - Animates anchor changes
\li \l {PathAnimation} - Animates position along a path
\endlist

Elements that provide lower-level animation control
\list
\li \l {PathInterpolator} - Allows manual animation along a path
\li \l {AnimationController} - Allows manual control of animation progress
\endlist

\section1 Models and Data Handling
\list
\li \l {QtQuick2::ListModel}{ListModel} - Defines a list of data
\li \l {QtQuick2::ListElement}{ListElement} - Defines a data item in a \l {QtQuick2::ListModel}{ListModel}
\li \l {VisualItemModel} - Contains items that already defines its own visual delegate
\li \l {VisualDataModel} - Encapsulates a model and a delegate
\li \l {XmlListModel} - Specifies a model using XPath expressions
\li \l {XmlRole} - Specifies a role for an \l {XmlListModel}
\li \l {Binding} - Binds any value to any property
\li \l {Package} - Collection that enables sharing of items within different views
\endlist

\section1 Views
\list
\li \l {ListView} - Provides a list visualization of a model
\li \l {GridView} - Provides a grid visualization of a model
\li \l {PathView} - Visualizes a model's contents along a path. See \l {Path Definition}{Path Elements} for more information.
\endlist

\section1 Path Definition
\list
\li \l {Path} - Defines a path used by \l {PathView}
\li \l {PathLine} - Defines a line in \l {Path}
\li \l {PathQuad} - Defines a quadratic Bezier curve in a \l {Path}
\li \l {PathCubic} - Defines a cubic Bezier curve in a \l {Path}
\li \l {PathArc} - Defines an arc in a \l {Path}
\li \l {PathCurve} - Defines a point on a Catmull-Rom curve in a \l {Path}
\li \l {PathSvg} - Defines a sub-path specified as a SVG path data string in a \l {Path}
\li \l {PathAttribute} - Allows the setting of attributes along a \l {Path}
\li \l {PathPercent} - Modifies the item distribution along a \l {Path}
\endlist

\section1 Utility
\list
\li \l {Connections} - Explicitly connects signals and signal handlers
\li \l {Timer} - Provides timed triggers
\li \l {Loader} - Controls the loading of items or components
\endlist

\section1 Graphical Effects
\list
\li \l {ShaderEffect} - Allows GLSL shaders to be used as graphical effects
\li \l {ShaderEffectSource} - Usable as a texture in ShaderEffect
\li \l {GridMesh} - Generates a gird mesh of vertices for use by ShaderEffect
\li The \l{QtQuick.Particles 2} module provides a set of Particle System elements for QtQuick 2
\endlist

\section1 Accessibility
\list
\li \l {Accessible} - Attached property to make components accessible
\endlist

*/
